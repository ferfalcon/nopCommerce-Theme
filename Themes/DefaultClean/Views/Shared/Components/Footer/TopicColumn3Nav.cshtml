@model FooterModel

@using Nop.Core.Domain.Topics

@{
	var footerLinks = new List<(bool Condition, string RouteName, string TranslationKey)> {
				(Model.DisplayCustomerInfoFooterItem, "CustomerInfo", "Account.MyAccount"),
				(Model.DisplayCustomerOrdersFooterItem, "CustomerOrders", "Account.CustomerOrders"),
				(Model.DisplayCustomerAddressesFooterItem, "CustomerAddresses", "Account.CustomerAddresses"),
				(Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem, "ShoppingCart", "ShoppingCart"),
				(Model.WishlistEnabled && Model.DisplayWishlistFooterItem, "Wishlist", "Wishlist"),
				(Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem, "ApplyVendorAccount", "Vendors.ApplyAccount"),
	};

	var topics = Model.Topics?.Where(x => x.IncludeInFooterColumn3).ToList() ?? new List<FooterModel.FooterTopicModel>();
}

@if (topics.Any() || footerLinks.Any(link => link.Condition))
{
	<nav class="content-box">
		<h2>@T("Footer.MyAccount")</h2>
		<ul>
			@foreach (var topic in topics)
			{
				<li>
					<a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
				</li>
			}
			@foreach (var link in footerLinks.Where(link => link.Condition))
			{
				<li>
					<a href="@Url.RouteUrl(link.RouteName)">@T(link.TranslationKey)</a>
				</li>
			}
		</ul>
	</nav>
}