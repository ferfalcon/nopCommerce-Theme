@model FooterModel

@using Nop.Core.Domain.Topics

@{
	var footerLinks = new List<(bool Condition, string RouteName, string TranslationKey)> {
				(Model.SearchEnabled && Model.DisplayProductSearchFooterItem, "ProductSearch", "Search"),
				(Model.NewsEnabled && Model.DisplayNewsFooterItem, "NewsArchive", "News"),
				(Model.BlogEnabled && Model.DisplayBlogFooterItem, "Blog", "Blog"),
				(Model.ForumEnabled && Model.DisplayForumsFooterItem, "Boards", "Forum.Forums"),
				(Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem, "RecentlyViewedProducts", "Products.RecentlyViewedProducts"),
				(Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem, "CompareProducts", "Products.Compare.List"),
				(Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem, "NewProducts", "Products.NewProducts"),
				(Model.AllowCustomersToCheckGiftCardBalance, "CheckGiftCardBalance", "CheckGiftCardBalance"),
	};

	var topics = Model.Topics?.Where(x => x.IncludeInFooterColumn2).ToList() ?? new List<FooterModel.FooterTopicModel>();
}

@if (topics.Any() || footerLinks.Any(link => link.Condition))
{
	<nav class="content-box">
		<h2>@T("Footer.CustomerService")</h2>
		<ul>
			@foreach (var topic in topics)
			{
				<li>
					<a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a>
				</li>
			}
			@foreach (var link in footerLinks.Where(link => link.Condition))
			{
				<li>
					<a href="@Url.RouteUrl(link.RouteName)">@T(link.TranslationKey)</a>
				</li>
			}
		</ul>
	</nav>
}