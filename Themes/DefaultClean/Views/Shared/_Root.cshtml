@{
	Layout = "_Root.Head";
}

@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })

@{ await Html.RenderPartialAsync("_Notifications"); }
@{ await Html.RenderPartialAsync("_JavaScriptDisabledWarning"); }

<div class="master-wrapper-page">
	@await Component.InvokeAsync(typeof(AdminHeaderLinksViewComponent))

	@{ await Html.RenderPartialAsync("_Header"); }

	<div class="master-wrapper-content" id="main" role="main">
		@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentBefore })

		@if (IsSectionDefined("Breadcrumb"))
		{
			@RenderSection("Breadcrumb")
		}

		<div class="master-column-wrapper">
			@RenderBody()
		</div>

		@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentAfter })
	</div>

	@await Component.InvokeAsync(typeof(FooterViewComponent))
</div>

@await Component.InvokeAsync(typeof(EuCookieLawViewComponent))
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })

<script asp-location="Footer">
	$(function () {
		$('.block .title').on('click', function () {
			var e = window, a = 'inner';
			if (!('innerWidth' in window)) {
				a = 'client';
				e = document.documentElement || document.body;
			}
			var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
			if (result.width < 1001) {
				$(this).siblings('.listbox').slideToggle('slow');
			}
		});
	});
</script>